name: CI Pipeline

on: push

jobs:
  project-testing:
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: install dependencies
        run: |
          pip install -r requirements.txt

      - name: run pipeline
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: |
          dvc repro

      - name: Run model tests
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: |
          python -m unittest tests/test_model.py

      - name: Promote model to production
        if: success()
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: python scripts/promote_model.py

      - name: Run Flask app tests
        if: success()
        env:
          DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
        run: python -m unittest tests/test_flask_app.py

      - name: Login to AWS ECR
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin 992382647488.dkr.ecr.ap-southeast-2.amazonaws.com

      - name: Build Docker image
        run: |
          docker build -t campusx_ecr .

      - name: Tag Docker image
        run: |
          docker tag campusx_ecr:latest 992382647488.dkr.ecr.ap-southeast-2.amazonaws.com/campusx_ecr:latest

      - name: Push Docker image to AWS ECR
        run: |
          docker push 992382647488.dkr.ecr.ap-southeast-2.amazonaws.com/campusx_ecr:latest

      - name: Setup SSH
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: Deploy Docker image to EC2
        run: |
          ssh -i private_key.pem ubuntu@ec2-13-55-157-111.ap-southeast-2.compute.amazonaws.com << EOF
            docker pull 992382647488.dkr.ecr.ap-southeast-2.amazonaws.com/campusx_ecr:latest
            docker stop campusx-app || true
            docker rm campusx-app || true
            docker run -d -p 80:5000 -e DAGSHUB_PAT=${{ secrets.DAGSHUB_PAT }} --name campusx-app 992382647488.dkr.ecr.ap-southeast-2.amazonaws.com/campusx_ecr:latest
          EOF

      - name: Cleanup
        run: |
          rm private_key.pem


      